@model InventoryManagementSystem.Models.Employee

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Master.cshtml";
}

@section style
    {
    <style>
        label.error {
            color: red;
            font-style: italic;
            display: inline;
        }
   

    </style >
    

}


    @using (Html.BeginForm("Create", "Employee", FormMethod.Post, new { id = "saveEmployeeForm" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4><i class="fas fa-info-circle"></i> New Employee</h4>
            <hr />
            @Html.ValidationSummary(true)

            <div class="form-group">
                @Html.LabelFor(model => model.EmployeeName, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmployeeName)
                    @Html.ValidationMessageFor(model => model.EmployeeName)
                </div>
            </div>

         

            <div class="form-group">
                @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="email" id="Email" name="Email" onkeyup="CheckEmail()" />
                    <span id="message"></span>
                    @Html.ValidationMessageFor(model => model.Email)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CellNo, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CellNo)
                    @Html.ValidationMessageFor(model => model.CellNo)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address)
                    @Html.ValidationMessageFor(model => model.Address)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Salary, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Salary)
                    @Html.ValidationMessageFor(model => model.Salary)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AddedBy, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select id="AddedBy" name="AddedBy" class="">

                        <option value="Admin">Admin</option>
                        <option value="Manager">Manager</option>

                    </select>
                    @Html.ValidationMessageFor(model => model.AddedBy)
                </div>
            </div>


            <input type="hidden" id="IsActive" name="IsActive" value="Yes" />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }

<div>
    <a href="@Url.Action("Index","Employee")" class=""><i class="fas fa-fast-backward"></i>Back</a>
</div>

@section scripts{
    <script src="~/Scripts/jquery-3.3.1.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/d3js/5.7.0/d3.min.js"></script>
  <script>
    $("#saveEmployeeForm").validate({
        rules: {
            EmployeeName: "required",
            Email: "required",
            CellNo: "required",
            Address: {
                required: true,
                maxlength: 200,
                minlength: 5,

            },
            Salary: "required",
            AddedBy: "required",
        },
        messages: {
            EmployeeName: "Please enter employee name",
            Email: "Please input email address ",
            CellNo: "Please input phone number",
            Address:
                    {
                        required: "Please enter product quantity ",
                        maxlength: "Address takes maximum of 200 charecter",
                        minlength: "Address takes minimum of 5 charecter",
                    },
            Salary:"Please input the salary",
            AddedBy: "Please enter your name",

        }
    });

</script>

    
<script>

    function CheckEmail() {

        var email = $("#Email").val();
        $.ajax({
            type: "POST",
            url: "/Employee/CheckEmailAddress",
            data: '{useremail:"' + email + '"}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                var mass = $("#message");
                if (result) {
                    mass.html("Email id is available!");
                    mass.css("color", "Green");
                }
                else {
                    mass.html("Email id is not available!");
                    mass.css("color", "Red");
                }
            }
        });
    }


</script>
}